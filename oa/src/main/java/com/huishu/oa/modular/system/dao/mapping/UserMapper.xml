<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.huishu.oa.modular.system.dao.UserMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.huishu.oa.modular.system.model.User">
        <id column="id" property="id"/>
        <result column="avatar" property="avatar"/>
        <result column="account" property="account"/>
        <result column="password" property="password"/>
        <result column="salt" property="salt"/>
        <result column="name" property="name"/>
        <result column="birthday" property="birthday"/>
        <result column="sex" property="sex"/>
        <result column="email" property="email"/>
        <result column="phone" property="phone"/>
        <result column="role_id" property="roleId"/>
        <result column="dept_id" property="deptId"/>
        <result column="status" property="status"/>
        <result column="address" property="address"/>
        <result column="create_time" property="createTime"/>
        <result column="create_by" property="createBy"/>
        <result column="update_time" property="updateTime"/>
        <result column="update_by" property="updateBy"/>
    </resultMap>

    <sql id="Base_Column_List">
		id, account, name, birthday, sex, email, avatar,
		phone, role_id roleId,
		dept_id deptId, status, address,
		create_time AS createTime, create_By AS createBy, update_time AS updateTime, update_By AS updateBy
	</sql>

    <sql id="Base_Column_List_With_Pwd">
		id, account, name, birthday,password, sex, email, avatar,
		phone, role_id roleId,salt,
		dept_id deptId, status,address,
		create_time AS createTime, create_By AS createBy, update_time AS updateTime, update_By AS updateBy
	</sql>
    <!--数据权限查询基类-->
    <sql id="selectUserVo">
      select 	u.id, u.account, u.name, u.birthday,u.password, u.sex, u.email, u.avatar,
		u.phone, u.role_id roleId,u.salt,
		u.dept_id deptId, u.status,u.address,
		u.create_time AS createTime, u.create_By AS createBy, u.update_time AS updateTime, u.update_By AS updateBy
        from sys_user u
	    left join sys_dept d on u.dept_id = d.id
    </sql>

    <select id="selectUsers" resultType="map">
        <include refid="selectUserVo"/>
        where u.status != 3
        <if test="name != null and name != ''">
            and (phone like CONCAT('%',#{name},'%')
            or account like CONCAT('%',#{name},'%')
            or name like CONCAT('%',#{name},'%'))
        </if>
        <if test="beginTime != null and beginTime != '' and endTime != null and endTime != ''">
            and (create_time between CONCAT(#{beginTime},' 00:00:00') and CONCAT(#{endTime},' 23:59:59'))
        </if>
        <if test="deptId != null and deptId != 0">
            and (dept_id = #{deptId} or dept_id in ( select id from sys_dept where pids like CONCAT('%[', #{deptId},
            ']%') ))
        </if>

        <!-- 数据范围过滤 -->
        ${params.dataScope}
    </select>

    <update id="setStatus">
		update sys_user set status = #{status} where id =
		#{userId}
	</update>

    <update id="changePwd">
		update sys_user set password = #{pwd} where id =
		#{userId}
	</update>

    <update id="setRoles">
		update sys_user set role_id = #{roleIds} where id =
		#{userId}
	</update>

    <select id="getByAccount" resultType="com.huishu.oa.modular.system.model.User">
        select
        <include refid="Base_Column_List_With_Pwd"/>
        from sys_user where account = #{account} and status != 3
    </select>

</mapper>
